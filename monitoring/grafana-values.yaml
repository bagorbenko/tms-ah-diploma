adminUser: admin
adminPassword: diploma2024

# Service configuration
service:
  type: LoadBalancer
  port: 80
  targetPort: 3000

# Persistence
persistence:
  enabled: true
  size: 10Gi
  storageClassName: standard

# Resources
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

# DataSources
datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus-server.monitoring:80
      access: proxy
      isDefault: true
    - name: Loki
      type: loki
      url: http://loki.monitoring:3100
      access: proxy

# Dashboard providers
dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /var/lib/grafana/dashboards/default

# Dashboards
dashboards:
  default:
    # Kubernetes cluster monitoring
    kubernetes-cluster:
      gnetId: 7249
      revision: 1
      datasource: Prometheus
    
    # Application performance monitoring
    application-overview:
      gnetId: 6417
      revision: 1
      datasource: Prometheus
    
    # Custom microservices dashboard
    microservices-dashboard:
      json: |
        {
          "dashboard": {
            "id": null,
            "title": "Diploma Microservices Dashboard",
            "tags": ["diploma", "microservices"],
            "style": "dark",
            "timezone": "browser",
            "panels": [
              {
                "id": 1,
                "title": "Request Rate",
                "type": "stat",
                "targets": [
                  {
                    "expr": "sum(rate(http_requests_total[5m])) by (service)",
                    "legendFormat": "{{service}}",
                    "refId": "A"
                  }
                ],
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 0,
                  "y": 0
                }
              },
              {
                "id": 2,
                "title": "Response Time",
                "type": "timeseries",
                "targets": [
                  {
                    "expr": "histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (service, le))",
                    "legendFormat": "{{service}} p95",
                    "refId": "A"
                  }
                ],
                "gridPos": {
                  "h": 8,
                  "w": 12,
                  "x": 12,
                  "y": 0
                }
              },
              {
                "id": 3,
                "title": "Error Rate",
                "type": "timeseries",
                "targets": [
                  {
                    "expr": "sum(rate(http_requests_total{status=~\"5..\"}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service)",
                    "legendFormat": "{{service}} error rate",
                    "refId": "A"
                  }
                ],
                "gridPos": {
                  "h": 8,
                  "w": 24,
                  "x": 0,
                  "y": 8
                }
              }
            ],
            "time": {
              "from": "now-1h",
              "to": "now"
            },
            "refresh": "5s"
          }
        }

# Environment variables
env:
  GF_SECURITY_ADMIN_USER: admin
  GF_SECURITY_ADMIN_PASSWORD: diploma2024
  GF_USERS_ALLOW_SIGN_UP: false
  GF_INSTALL_PLUGINS: "grafana-kubernetes-app,grafana-clock-panel,grafana-piechart-panel"
  GF_SERVER_ROOT_URL: "https://grafana-diploma-project.duckdns.org"
  GF_SERVER_SERVE_FROM_SUB_PATH: "false"

# Security context
securityContext:
  runAsUser: 472
  runAsGroup: 472
  fsGroup: 472

# Node selector for scheduling
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {} 
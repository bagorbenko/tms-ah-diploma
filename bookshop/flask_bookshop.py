from flask import Flask, jsonify, request
from flask_cors import CORS
import requests
import json
from datetime import datetime
import os

app = Flask(__name__)
CORS(app)

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
books = [
    {'id': 1, 'title': '–ß–∏—Å—Ç—ã–π –∫–æ–¥', 'author': '–†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω', 'price': 1500, 'isbn': '978-5-4461-0923-4', 'category': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'},
    {'id': 2, 'title': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ü–û', 'author': '–ú–∞—Ä—Ç–∏–Ω –§–∞—É–ª–µ—Ä', 'price': 2000, 'isbn': '978-5-4461-0924-1', 'category': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'},
    {'id': 3, 'title': 'Python –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤', 'author': '–î—ç–Ω –ë–µ–π–¥–µ—Ä', 'price': 1800, 'isbn': '978-5-4461-0925-8', 'category': 'Python'},
    {'id': 4, 'title': '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API', 'author': '–ê—Ä–Ω–æ –õ–æ—Ä–µ—Ç', 'price': 2200, 'isbn': '978-5-4461-0926-5', 'category': 'API'},
    {'id': 5, 'title': 'Kubernetes –≤ –¥–µ–π—Å—Ç–≤–∏–∏', 'author': '–ú–∞—Ä–∫–æ –õ—É–∫—à–∞', 'price': 2500, 'isbn': '978-5-4461-0927-2', 'category': 'DevOps'}
]

authors = [
    {'id': 1, 'name': '–†–æ–±–µ—Ä—Ç –ú–∞—Ä—Ç–∏–Ω', 'bio': '–ò–∑–≤–µ—Å—Ç–Ω—ã–π –∞–≤—Ç–æ—Ä –∫–Ω–∏–≥ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é'},
    {'id': 2, 'name': '–ú–∞—Ä—Ç–∏–Ω –§–∞—É–ª–µ—Ä', 'bio': '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –ü–û'},
    {'id': 3, 'name': '–î—ç–Ω –ë–µ–π–¥–µ—Ä', 'bio': 'Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏ —Ç—Ä–µ–Ω–µ—Ä'},
    {'id': 4, 'name': '–ê—Ä–Ω–æ –õ–æ—Ä–µ—Ç', 'bio': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä API'},
    {'id': 5, 'name': '–ú–∞—Ä–∫–æ –õ—É–∫—à–∞', 'bio': 'Kubernetes —ç–∫—Å–ø–µ—Ä—Ç'}
]

categories = [
    {'id': 1, 'name': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'},
    {'id': 2, 'name': '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'},
    {'id': 3, 'name': 'Python'},
    {'id': 4, 'name': 'API'},
    {'id': 5, 'name': 'DevOps'}
]

cart = []
orders = []
users = [
    {'id': 1, 'username': 'admin', 'email': 'admin@bookshop.com', 'first_name': 'Admin', 'last_name': 'User'}
]

# URL API Store –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
API_STORE_URL = os.getenv('API_STORE_URL', 'http://api-store-service.api-store-prod.svc.cluster.local')

@app.route('/')
def health_check():
    return jsonify({
        'service': 'Bookshop Flask',
        'status': 'healthy',
        'version': '1.0.0',
        'books_count': len(books),
        'orders_count': len(orders),
        'cart_items': len(cart),
        'api_store_url': API_STORE_URL,
        'endpoints': {
            'GET /': 'Health check',
            'GET /api/books': '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–Ω–∏–≥–∏',
            'GET /api/books/<id>': '–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É –ø–æ ID',
            'GET /api/authors': '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–æ–≤',
            'GET /api/categories': '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏',
            'POST /api/cart/add': '–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É –≤ –∫–æ—Ä–∑–∏–Ω—É',
            'GET /api/cart': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
            'DELETE /api/cart': '–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
            'POST /api/orders': '–°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑',
            'GET /api/orders': '–ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫–∞–∑—ã',
            'GET /api/users': '–ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
        }
    })

# Books API
@app.route('/api/books', methods=['GET'])
def get_books():
    return jsonify({
        'count': len(books),
        'results': books
    })

@app.route('/api/books/<int:book_id>', methods=['GET'])
def get_book(book_id):
    book = next((b for b in books if b['id'] == book_id), None)
    if not book:
        return jsonify({'error': '–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404
    return jsonify(book)

# Authors API
@app.route('/api/authors', methods=['GET'])
def get_authors():
    return jsonify({
        'count': len(authors),
        'results': authors
    })

# Categories API
@app.route('/api/categories', methods=['GET'])
def get_categories():
    return jsonify({
        'count': len(categories),
        'results': categories
    })

# Cart API
@app.route('/api/cart', methods=['GET'])
def get_cart():
    total = sum(item['price'] * item['quantity'] for item in cart)
    return jsonify({
        'items': cart,
        'total': total,
        'count': len(cart),
        'item_count': sum(item['quantity'] for item in cart)
    })

@app.route('/api/cart/add', methods=['POST'])
def add_to_cart():
    try:
        data = request.get_json()
        if not data:
            return jsonify({'error': '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–ø—Ä–æ—Å–µ'}), 400
            
        book_id = data.get('book_id')
        quantity = data.get('quantity', 1)
        
        if not book_id:
            return jsonify({'error': 'book_id –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω'}), 400
        
        book = next((b for b in books if b['id'] == book_id), None)
        if not book:
            return jsonify({'error': '–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞'}), 404
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ —ç—Ç–∞ –∫–Ω–∏–≥–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        existing_item = next((item for item in cart if item['book_id'] == book_id), None)
        if existing_item:
            existing_item['quantity'] += quantity
            cart_item = existing_item
        else:
            cart_item = {
                'book_id': book_id,
                'title': book['title'],
                'author': book['author'],
                'price': book['price'],
                'quantity': quantity
            }
            cart.append(cart_item)
        
        return jsonify({
            'message': '–ö–Ω–∏–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É',
            'item': cart_item,
            'cart_total': sum(item['price'] * item['quantity'] for item in cart)
        }), 200
    except Exception as e:
        return jsonify({'error': str(e)}), 500

@app.route('/api/cart', methods=['DELETE'])
def clear_cart():
    cart.clear()
    return jsonify({'message': '–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞'}), 200

# Orders API
@app.route('/api/orders', methods=['GET'])
def get_orders():
    return jsonify({
        'count': len(orders),
        'results': orders
    })

@app.route('/api/orders', methods=['POST'])
def create_order():
    try:
        if not cart:
            return jsonify({'error': '–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞'}), 400
        
        order_id = len(orders) + 1
        order = {
            'id': order_id,
            'items': cart.copy(),
            'total': sum(item['price'] * item['quantity'] for item in cart),
            'created_at': datetime.now().isoformat(),
            'status': 'created',
            'user_id': 1  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é admin user
        }
        orders.append(order)
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ API Store
        purchase_data = []
        for item in cart:
            purchase_data.append({
                'order_id': order_id,
                'book_id': item['book_id'],
                'user_id': 1,
                'book_title': item['title'],
                'author_name': item['author'],
                'price': item['price'] * item['quantity'],
                'create_at': datetime.now().strftime('%Y-%m-%d'),
                'publisher_id': 1
            })
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –≤ API Store
        try:
            print(f'üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ {order_id} –≤ API Store: {API_STORE_URL}')
            response = requests.post(f'{API_STORE_URL}/purchases/', json=purchase_data, timeout=10)
            if response.status_code == 200:
                print(f'‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ API Store')
                order['api_store_status'] = 'sent'
                order['api_store_response'] = response.json()
            else:
                print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ API Store: {response.status_code}')
                order['api_store_status'] = 'failed'
                order['api_store_error'] = f'HTTP {response.status_code}'
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å API Store: {e}')
            order['api_store_status'] = 'connection_error'
            order['api_store_error'] = str(e)
        
        # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
        cart.clear()
        print(f'üéâ –ó–∞–∫–∞–∑ {order_id} —Å–æ–∑–¥–∞–Ω! –°—É–º–º–∞: {order["total"]} —Ä—É–±.')
        return jsonify(order), 201
    except Exception as e:
        return jsonify({'error': str(e)}), 500

# Users API
@app.route('/api/users', methods=['GET'])
def get_users():
    return jsonify({
        'count': len(users),
        'results': users
    })

# Health check endpoint
@app.route('/health')
def health():
    return jsonify({'status': 'healthy'})

# API Documentation
@app.route('/api/docs')
def api_docs():
    return jsonify({
        'title': 'Bookshop API',
        'version': '1.0.0',
        'description': 'Flask API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–∂–Ω—ã–º –º–∞–≥–∞–∑–∏–Ω–æ–º',
        'endpoints': {
            'books': '/api/books - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∞–º–∏',
            'authors': '/api/authors - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∞–º–∏',
            'categories': '/api/categories - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏',
            'cart': '/api/cart - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π',
            'orders': '/api/orders - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏',
            'users': '/api/users - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏'
        }
    })

if __name__ == '__main__':
    print('üöÄ Flask Bookshop –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000')
    print(f'üîó API Store URL: {API_STORE_URL}')
    app.run(host='0.0.0.0', port=8000, debug=True) 
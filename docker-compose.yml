version: "3.8"

services:
  # PostgreSQL для Flask Bookshop (опционально, по умолчанию SQLite)
  db_bookshop:
    image: postgres:15
    container_name: db_bookshop
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_USER: bookshop_user
      POSTGRES_PASSWORD: bookshop_pass
      POSTGRES_DB: bookshop
    volumes:
      - bookshop_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookshop_user -d bookshop"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL для API Store
  db_api:
    image: postgres:15
    container_name: db_api
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: api_pass
      POSTGRES_DB: api_store
    volumes:
      - api_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U api_user -d api_store"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI API Store
  api_store:
    build:
      context: ./api-store
      dockerfile: Dockerfile
    container_name: fastapi_api_store
    platform: linux/amd64
    ports:
      - "5050:5050"
    environment:
      DATABASE_URL: postgresql://api_user:api_pass@db_api:5432/api_store
      PYTHONPATH: /app
    depends_on:
      db_api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Flask Bookshop Application
  bookshop:
    build:
      context: ./bookshop
      dockerfile: Dockerfile
    container_name: flask_bookshop
    platform: linux/amd64
    ports:
      - "8000:8000"
    environment:
      FLASK_ENV: development
      DATABASE_URL: sqlite:///bookshop.db
      API_STORE_URL: http://api_store:5050
    volumes:
      - ./bookshop:/app/bookshop
      - .:/app/static  # Монтируем корневую директорию для доступа к HTML файлам
    depends_on:
      - api_store
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx для статических файлов
  nginx:
    image: nginx:alpine
    container_name: nginx_frontend
    platform: linux/amd64
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - .:/usr/share/nginx/html
    depends_on:
      - bookshop
      - api_store

volumes:
  bookshop_data:
  api_data:
